package snapshots

import (
	"fmt"
	"log"
	"os"
	"path/filepath"
	"strconv"

	"github.com/ironstar-io/tokaido/conf"
	"github.com/ironstar-io/tokaido/system/console"
	"github.com/ironstar-io/tokaido/utils"
)

// Delete deletes all backup files generated by Tokaido
func Delete(args []string) {
	fmt.Println()
	p := filepath.Join(conf.GetProjectPath(), ".tok", "local", "snapshots")

	// Get a list of all available snapshots
	all := getSortedSnapshotList(p)
	if len(all) == 0 {
		console.Println("💢  No snapshots were found", "×")
		fmt.Println("")
		return
	}

	// If the user specified a snapshot, just delete that one
	if len(args) > 0 {
		id, err := strconv.Atoi(args[0])
		if err != nil {
			console.Println("\n🙅‍  There was an error looking up that database snapshot", "")
			log.Fatal(err)
		}

		deleteSnapshot(all[id])
		fmt.Println("")
		return
	}

	// If the user didn't specify an ID, then delete all snapshots made by Tokaido
	files, err := filepath.Glob(p + "/tokaido_*")
	if err != nil {
		console.Println("\n🙅‍  There was an error getting a list of database snapshots to delete", "")
		log.Fatal(err)
	}
	if len(files) == 0 {
		console.Println("💢  No snapshots were found which could be deleted by Tokaido", "")
		fmt.Println("")
		return
	}

	confirmDestroy := utils.ConfirmationPrompt(`💀  This will delete all database snapshots created by Tokaido. Are you sure?`, "n")
	if confirmDestroy == false {
		console.Println(`🕊  No snapshots were harmed`, "")
		return
	}

	for _, f := range files {
		deleteSnapshot(f)
	}

	if len(files) > 1 {
		fmt.Printf("🗑   Successfully deleted %d snapshots", len(files))
	} else if len(files) == 1 {
		fmt.Printf("🗑   Successfully deleted %d snapshot", len(files))
	}

	fmt.Println("")
	fmt.Println("")

	return
}

func deleteSnapshot(f string) {
	p := filepath.Join(conf.GetProjectPath(), ".tok", "local", "snapshots")

	fmt.Println("    Deleting snapshot " + filepath.Base(f))
	err := os.Remove(filepath.Join(p, f))
	if err != nil {
		panic(err)
	}
}
